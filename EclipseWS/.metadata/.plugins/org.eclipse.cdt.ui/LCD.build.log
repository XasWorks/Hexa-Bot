15:12:25 **** Incremental Build of configuration Release for project LCD ****
make all 
Building file: ../Code/RotaryStepper.cpp
Invoking: AVR C++ Compiler
avr-g++ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -funsigned-char -funsigned-bitfields -fno-exceptions -mmcu=atmega644p -DF_CPU=16000000UL -MMD -MP -MF"Code/RotaryStepper.d" -MT"Code/RotaryStepper.d" -c -o "Code/RotaryStepper.o" "../Code/RotaryStepper.cpp"
Finished building: ../Code/RotaryStepper.cpp
 
Building target: LCD.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,LCD.map,--cref -mrelax -Wl,--gc-sections -mmcu=atmega644p -o "LCD.elf"  ./Code/LCD.o ./Code/PrimitiveStepper.o ./Code/RotaryStepper.o  ./PWMLed.o ./main.o   
Finished building target: LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S LCD.elf  >"LCD.lss"
Finished building: LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex LCD.elf  "LCD.hex"
Finished building: LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex LCD.elf  "LCD.eep"
Finished building: LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega644p LCD.elf
AVR Memory Usage
----------------
Device: atmega644p

Program:    1482 bytes (2.3% Full)
(.text + .data + .bootloader)

Data:         66 bytes (1.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 

15:12:26 Build Finished (took 161ms)

